# SCsub

Import('env')

env_tts = env.Clone()

env_tts.Append(CPPPATH=["data_structures/structures/rb_tree"])
env_tts.Append(CPPPATH=["data_structures/structures/stack"])
env_tts.Append(CPPPATH=["data_structures/structures/queue"])
env_tts.Append(CPPPATH=["data_structures/structures/linked_list"])
env_tts.Append(CPPPATH=["Set"])
env_tts.Append(CPPPATH=["Stack"])
env_tts.Append(CPPPATH=["Queue"])
env_tts.Append(CPPPATH=["LinkedList"])

env_tts.add_source_files(env_tts.modules_sources, "data_structures/structures/rb_tree/*.cpp")
env_tts.add_source_files(env_tts.modules_sources, "data_structures/structures/stack/*.cpp")
env_tts.add_source_files(env_tts.modules_sources, "data_structures/structures/queue/*.cpp")
env_tts.add_source_files(env_tts.modules_sources, "data_structures/structures/linked_list/*.cpp")
env_tts.add_source_files(env_tts.modules_sources, "Set/*.cpp")
env_tts.add_source_files(env_tts.modules_sources, "Stack/*.cpp")
env_tts.add_source_files(env_tts.modules_sources, "Queue/*.cpp")
env_tts.add_source_files(env_tts.modules_sources, "LinkedList/*.cpp")
env_tts.add_source_files(env_tts.modules_sources, "*.cpp")
